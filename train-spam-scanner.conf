
# train-spam-scanner.conf: local configuration for train-spam-scanner
# (train spammassassin/rspamd on dovecot servers)

# This file is included by train-spam-scanner and can be used to
# override any config variables it uses.
#
# The defaults here are used on an ISPConfig mail server running Debian 10.
# Save it as /etc/train-spam-scanner/train-spam-scanner.conf.
#
# You need to set ADMIN_USERS (below) to at least one valid dovecot username,
# which will be given rights to administer the admin training folders.

# which spam scanner should be trained
#  rspamd:       Rspamd
#  spamassassin: SpamAssassin
#  auto:         SpamAssassin if found, else Rspamd
SCANNER="auto"

# how to rebuild/merge mail in working and incoming folders
#  incremental:  add only recent spam/non-spam messages (default)
#  rebuild:      completely wipe and recreate
REBUILD_FOLDERS_MODE="incremental"

# how to train/rebuild bayes db
#  normal:       train live bayes db with all messages
#                in admin incoming folders and admin training folders (default)
#  rebuild:      create and train a new bayes db, then move to live
#  incremental:  **not yet implemented**, the intent is to:
#                - unlearn old messages being removed from incoming folders
#                - train new messages going into incoming folders
#                - train "new" messages in training folders
# rspamd always uses 'normal'; there is no rspamc interface to delete all tokens
# so 'rebuild' is a no-go, and there is currently no way to unlearn a message,
# so incremental doesn't make sense
REBUILD_BAYES_MODE="normal"
REBUILD_BAYES_MODE="incremental"
#REBUILD_BAYES_MODE="rebuild"

# imap users given rights to the admin folder,
# ie. these users/logins have access to the Admin/* training folders
# (you must create these users manually before running this script)
# This is an array.
#ADMIN_USERS=('admin1@yourdomain.tld' 'admin2@otherdomain.tld')
ADMIN_USERS=( "root@`hostname -d`" )

# should we create training folders for all user accounts (yes/no)
CREATE_USER_FOLDERS="no"

# clean up user training messages older than this time
# (must be a valid date specification for a dovecot search_query)
CLEANUP_USER_MESSAGES_BEFORE="27weeks"

# clean up admin training messages older than this time
# (must be a valid date specification for a dovecot search_query)
CLEANUP_ADMIN_MESSAGES_BEFORE="53weeks"

# unix user/group which owns the shared folders
SHARED_USER='vmail'
SHARED_GROUP='vmail'

# unix user which spam training should be performed as
TRAIN_AS_USER='amavis'
TRAIN_AS_GROUP='amavis'

# location of shared folders
SHARED_ROOT='/var/vmail/admin'

# location of bind mount point for training
TRAIN_BIND_MNT='/var/lib/amavis/mnt'

# location of persistent data (timestamp file) and tmp files (guid lists)
DATA_DIR='/var/lib/train-spam-scanner'


# SpamAssassin specific settings

##  To use a sql/redis bayes store with spamassassin, the variables 
##  BAYES_LIVE_DBPATH  and  BAYES_TRAIN_DBPATH  must be empty (below):

# location of live bayes dbpath (leave unset for sql/redis bayes store)
BAYES_LIVE_DBPATH='/var/lib/amavis/.spamassassin/bayes'

# location of tmp dir for rebuilding bayes db when training
# (unused for sql/redis bayes store)
BAYES_TEMP='/var/lib/amavis/.bayes-rebuild'

# location of bayes dbpath to be trained; left unset, the live bayes db
# will be trained (leave unset for sql/redis bayes store)
BAYES_TRAIN_DBPATH="${BAYES_TEMP}/bayes"

# extra arguments passed to sa-learn
# SA_LEARN_ARGS="--cf 'bayes_learn_to_journal 1'"
SA_LEARN_ARGS=''


# Rspamd specific settings

# Path to file containing the controller password
# (Or, if it doesn't start with '/' or '.', the password itself.
# But it might leak the password through ps to other users)
RSPAMD_CONTROLLER_PASSWORD=/etc/train-spam-scanner/rspamd-controller.password

# classifier to learn for (default by rspamc: bayes), e.g. `bayes_user`
RSPAMD_CLASSIFIER=''

